// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Evento {
  id              String      @id @default(uuid()) @db.Char(36)
  titulo          String      @db.VarChar(100)
  localizacao     String      @db.VarChar(100)
  faixaEtaria     Int         @db.Int
  ingressosEvento Ingressos[]
  Categorias      Categorias  @relation(fields: [categoriaId], references: [id])
  categoriaId     String      @db.Char(36)
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")

  @@map("eventos")
}

model TipoUsuario {
  id          String        @id @default(uuid()) @db.Char(36)
  rotulo      String        @db.VarChar(15)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  UsuarioTipo UsuarioTipo[]

  @@map("tipos_usuarios")
}

model Usuario {
  id              String        @id @default(uuid()) @db.Char(36)
  nome            String        @db.VarChar(100)
  sobrenome       String        @db.VarChar(300)
  email           String        @unique @db.VarChar(100)
  senha           String        @db.VarChar(100)
  tipoId          String        @db.Char(36)
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  UsuarioTipo     UsuarioTipo[]
  UsuarioCarrinho Carrinho[]

  @@map("usuarios")
}

model UsuarioTipo {
  usuario       Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId     String      @db.Char(36)
  tipoUsuario   TipoUsuario @relation(fields: [tipoUsuarioId], references: [id])
  tipoUsuarioId String      @db.Char(36)
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  @@id([usuarioId, tipoUsuarioId])
  @@map("usu_tipos")
}

model Ingressos {
  id               String             @id @default(uuid()) @db.Char(36)
  valor            Decimal            @db.Decimal(9, 2)
  quantidade       Int                @db.Int
  evento           Evento             @relation(fields: [eventoId], references: [id])
  eventoId         String             @db.Char(36)
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  CarrinhoIngresso CarrinhoIngresso[]

  @@map("ingressos")
}

model Carrinho {
  id               String             @id @default(uuid()) @db.Char(36)
  usuario          Usuario            @relation(fields: [usuarioId], references: [id])
  usuarioId        String             @db.Char(36)
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  CarrinhoIngresso CarrinhoIngresso[]

  @@map("carrinho")
}

model CarrinhoIngresso {
  id          String    @id @default(uuid()) @db.Char(36)
  carrinho    Carrinho  @relation(fields: [carrinhoId], references: [id])
  carrinhoId  String    @db.Char(36)
  ingressos   Ingressos @relation(fields: [ingressosId], references: [id])
  ingressosId String    @db.Char(36)
  quantidade  Int       @db.Int
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("carrinho_ingressos")
}

model Categorias {
  id              String   @id @default(uuid()) @db.Char(36)
  descricao       String   @db.VarChar(100)
  categoriaEvento Evento[]
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("categorias")
}
